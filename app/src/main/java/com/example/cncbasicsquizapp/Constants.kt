package com.example.cncbasicsquizapp

import java.util.*
import kotlin.collections.ArrayList

object Constants {

    const val USER_NAME: String = "user_name"
    const val TOTAL_QUESTIONS: String = "total_questions"
    const val CORRECT_ANSWERS: String = "correct_answers"

    fun qetQuestions(): ArrayList<Question> {
        val questionsList = ArrayList<Question>()
        val question1 = Question(
            id = 1, "ОПИСАНИЕ кода...", R.drawable.g00,
            "Код отвечающий за ход",
            "Кот отвечающий за код",
            "Код отвечающий за кот",
            "Код отвечающий за быстрое перемещение на большой плоскости",
            1
        )
        val question2 = Question(
            id = 2, "ПРИМЕНЕНИЕ кода...", R.drawable.g00,
            "Подход на безопасное растояние от заготовки или детали",
            "Подход на небезопасное растояние от заготовки или детали",
            "Подход на безопасное растояние от задней бабки",
            "Подход к безопасному растоянию от стоики станка ",
            1
        )
        val question3 = Question(
            id = 3, "ПАРАМЕТРЫ кода...", R.drawable.g00,
            "x,y,z,F - непрограммируемый",
            "x,y,z,F - программируемый",
            "x,v,z,F - непрограммируемый",
            "x,y,z - непрограммируемый",
            1
        )
        val question4 = Question(
            id = 4, "ОПИСАНИЕ кода...", R.drawable.g01,
            "Код отвечающий за ход", "Кот отвечающий за ход",
            "Код отвечающий за сож", "Код отвечающий за отвод",
            1
        )

        val question5 = Question(
            id = 5, "ПРИМЕНЕНИЕ кода...", R.drawable.g01,
            "Подход на безопасное растояние от заготовки или детали",
            "Подход на небезопасное растояние от заготовки или детали",
            "Для обработки",
            "Подход к безопасному растоянию от стоики станка ",
            1
        )
        val question6 = Question(
            id = 6, "ПАРАМЕТРЫ кода...", R.drawable.g01,
            "x,y,z,F - программируемый",
            "x,y,z,F - непрограммируемый",
            "x,v,z,F - непрограммируемый",
            "x,y,z - непрограммируемый",
            1
        )
        val question7 = Question(
            id = 7, "ОПИСАНИЕ кода...", R.drawable.g02,
            "Код отвечающий за ход по радиусу или дуге ( по часовой )",
            "Код отвечающий за ход по радиусу или дуге ( против часовой )",
            "Код отвечающий за быстрое линейное перемещение",
            "Код отвечающий за перемещение патрона в станке",
            1
        )
        val question8 = Question(
            id = 8, "ПРИМЕНЕНИЕ кода...", R.drawable.g02,
            "При обработке радиусов и дуг",
            "Подход на небезопасное растояние от заготовки или детали",
            "При обработке линейных размеров",
            "При вертикальной обработке",
            1
        )
        val question9 = Question(
            id = 9, "ПАРАМЕТРЫ кода...", R.drawable.g02,
            "x,y,z,F - программируемый, R - радиус на чертеже",
            "x,y,z,F - непрограммируемый, R - радиус на чертеже",
            "x,v,z,F - непрограммируемый",
            "x,y,z - непрограммируемый",
            1
        )
        val question10 = Question(
            id = 10, "ОПИСАНИЕ кода...", R.drawable.g03,
            "Код отвечающий за ход по радиусу или дуге ( против часовой )",
            "Код отвечающий за ход по радиусу или дуге ( по часовой )",
            "Код отвечающий за быстрое линейное перемещение",
            "Код отвечающий за перемещение патрона в станке",
            1
        )
        val question11 = Question(
            id = 11, "ПРИМЕНЕНИЕ кода...", R.drawable.g03,
            "При обработке радиусов и дуг",
            "Подход на безопасное растояние от заготовки или детали",
            "При обработке линейных размеров",
            "При переезде между отверстиями",
            1
        )
        val question12 = Question(
            id = 12, "ПАРАМЕТРЫ кода...", R.drawable.g03,
            "x,y,z,F - программируемый, R - радиус на чертеже",
            "x,y,z,F - непрограммируемый, R - радиус на чертеже",
            "x,y,z,F - программируемый, R - угол радиуса",
            "x,y,z - непрограммируемый",
            1
        )
        val question13 = Question(
            id = 13, "ОПИСАНИЕ кода...", R.drawable.g04,
            "Пауза", "Остановка", "Стоянка", "Парковка",
            1
        )
        val question14 = Question(
            id = 14, "ПРИМЕНЕНИЕ кода...", R.drawable.g04,
            "При потребности в задержке обработки на определённое время",
            "При востребованности в задержке подработки на определённое время",
            "При потребности в остановке обработки на определённое время",
            "После нанесения кода на лоб оператора",
            1
        )
        val question15 = Question(
            id = 15, "ПАРАМЕТРЫ кода...", R.drawable.g04,
            "P - мс/с",
            "S - мс/с",
            "P - с/мс",
            "x,y,z",
            1
        )
        val question16 = Question(
            id = 16, "ОПИСАНИЕ кода...", R.drawable.g20,
            "Дюймовая система изчислений",
            "Метрическая система изчислений",
            "Система от одного нуля",
            "Система пенсионных изчислений",
            1
        )
        val question17 = Question(
            id = 17, "ПРИМЕНЕНИЕ кода...", R.drawable.g20,
            "Дюймовые резьбы и размеры",
            "Метрическая система изчислений",
            "Система от одного нуля",
            "Система где остановился там и ноль",
            1
        )
        val question18 = Question(
            id = 18, "ПАРАМЕТРЫ кода...", R.drawable.g20,
            "нет",
            "S - мс/с",
            "P - с/мс",
            "x,y,z",
            1
        )
        val question19 = Question(
            id = 19, "ОПИСАНИЕ кода...", R.drawable.g21,
            "Метрическая система изчислений",
            "Дюймовая система изчислений",
            "Система от одного нуля",
            "Система пенсионных начислений",
            1
        )
        val question20 = Question(
            id = 20, "ПРИМЕНЕНИЕ кода...", R.drawable.g21,
            "Метрические резьбы и размеры",
            "Метрическая система изчислений",
            "Дюймовые резьбы и размеры",
            "Система где остановился там и ноль",
            1
        )
        val question21 = Question(
            id = 21, "ПАРАМЕТРЫ кода...", R.drawable.g21,
            "нет",
            "S - мс/с",
            "P - с/мс",
            "x,y,z",
            1
        )
//        val question8 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g28,
//            "Программируемые нули",
//            "Ноль детали/заготовки",
//            "Код машинного нуля",
//            "Метрическая система изчислений",
//            1
//        )
//        val question9 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g54,
//            "Ноль детали/заготовки",
//            "Ноль программы",
//            "Машинный ноль",
//            "Ноль в ноль",
//            1
//        )
//        val question10 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g71,
//            "Черновой цикл",
//            "Чистово цикл",
//            "Цикл нарезания резьбы резцом",
//            "Канавочный цикл",
//            1
//        )
//        val question11 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g70,
//            "Чистово цикл",
//            "Черновой цикл",
//            "Цикл нарезания резьбы резцом",
//            "Канавочный цикл",
//            1
//        )
//        val question12 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g75,
//            "Канавочный цикл",
//            "Чистово цикл",
//            "Черновой цикл",
//            "Цикл нарезания резьбы резцом",
//            1
//        )
//        val question13 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g76,
//            "Цикл нарезания резьбы резцом",
//            "Канавочный цикл",
//            "Чистово цикл",
//            "Черновой цикл",
//            1
//        )
//        val question14 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g80,
//            "Отмена циклов сверления и отмена их параметров",
//            "Отмена сверления",
//            "Цикл сверления с задержкой на дне отверстия",
//            "Отмена параметров чернового цикла",
//            1
//        )
//        val question15 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g81,
//            "Цикл сверления насквозь (глубина < 3D)",
//            "Цикл сверления с прерыванием",
//            "Цикл сверления с задержкой на дне отверстия",
//            "Цикл сверления с зарыванием",
//            1
//        )
//        val question16 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g82,
//            "Цикл сверления с задержкой на дне отверстия",
//            "Цикл сверления насквозь (глубина < 3D)",
//            "Цикл сверления с прерыванием",
//            "Цикл сверления с зарыванием",
//            1
//        )
//        val question17 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g83,
//            "Цикл сверления с полным выводом сверла",
//            "Цикл сверления с задержкой на дне отверстия",
//            "Цикл сверления насквозь (глубина < 3D)",
//            "Цикл сверления с обрывание",
//            1
//        )
//        val question18 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g73,
//            "Цикл высокоскоростного сверления",
//            "Цикл сверления с задержкой на дне отверстия",
//            "Цикл сверления насквозь (глубина < 3D)",
//            "Цикл сверления с задержкой перед сверлением",
//            1
//        )
//        val question19 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g90,
//            "Глобальная система одного нуля на заготовке",
//            "Глобальная система, где остановился инструмент там и ноль детали/заготовки",
//            "Система от одного нуля",
//            "Система пенсионных начислений",
//            1
//        )
//        val question20 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g91,
//            "Глобальная система, где остановился инструмент там и ноль детали/заготовки",
//            "Глобальная система одного нуля на заготовке",
//            "Система офсэтов инструмента",
//            "Система поворота барабата вокруг своей оси",
//            1
//        )
//        val question21 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g94,
//            "Формат подачи ( мм/мин )",
//            "Формат подачи ( мм/обр )",
//            "Формат скорости резания",
//            "Формат системы изчислений",
//            1
//        )
//        val question22 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g95,
//            "Формат подачи ( мм/обр )",
//            "Формат подачи ( мм/мин )",
//            "Формат скорости резания",
//            "Формат системы изчислений",
//            1
//        )
//        val question23 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g96,
//            "Постоянная скорость резания",
//            "Постоянные обороты шпинделя",
//            "Постоянная скорость перемещения",
//            "Глобальная система постоянности",
//            1
//        )
//        val question24 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g97,
//            "Константные обороты шпинделя",
//            "Постоянная скорость резания",
//            "Постояннная система вращения",
//            "Константные перемещения патрона",
//            1
//        )
//        val question25 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g98,
//            "Плоскость переезда между отверстиями от изначальной позиции резца",
//            "Плоскость переезда между отверстиями от нуля детали/заготовки",
//            "Плоскость переезда между отверстием",
//            "Плоскость подъезда к заготовке",
//            1
//        )
//        val question26 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g99,
//            "Плоскость переезда между отверстиями от нуля детали/заготовки",
//            "Плоскость переезда между отверстиями от изначальной позиции резца",
//            "Плоскость переезда между отверстием",
//            "Плоскость подъезда к заготовке",
//            1
//        )
//        val question27 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.m0,
//            "Остановка всегда",
//            "Остановка с включёной кнопкой",
//            "Остановка по требованию",
//            "Приостановка вращения шпинделя",
//            1
//        )
//        val question28 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.m1,
//            "Остановка с включёной кнопкой",
//            "Остановка всегда",
//            "Остановка по требованию",
//            "Приостановка вращения шпинделя",
//            1
//        )
//        val question29 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.m3,
//            "Запуск вращения шпинделя ( по часовой )",
//            "Запуск вращения шпинделя ( против часовой )",
//            "Запуск СОЖ",
//            "Запуск константных оборотов шпинделя",
//            1
//        )
//        val question30 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.m4,
//            "Запуск вращения шпинделя ( против часовой )",
//            "Запуск вращения шпинделя ( по часовой )",
//            "Запуск СОЖ",
//            "Запуск константных оборотов шпинделя",
//            1
//        )
//        val question31 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.m5,
//            "Остановка вращения шпинделя",
//            "Запуск вращения шпинделя ( против часовой )",
//            "Запуск вращения шпинделя ( по часовой )",
//            "Остановка всегда",
//            1
//        )
//        val question32 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.m8,
//            "Включить охлаждение (СОЖ)",
//            "Включить подачу воздуха",
//            "Выключить охлаждение (СОЖ)",
//            "Включить вращение шпинделя",
//            1
//        )
//        val question33 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.m7,
//            "Включить подачу дополнительного охлаждения",
//            "Включить охлаждение (СОЖ)",
//            "Выключить охлаждение (СОЖ)",
//            "Выключить вращение шпинделя",
//            1
//        )
//        val question34 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.m9,
//            "Выключить охлаждение (СОЖ)",
//            "Включить охлаждение (СОЖ)",
//            "Включить подачу воздуха)",
//            "Включить вращение шпинделя",
//            1
//        )
//        val question35 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.m30,
//            "Конец программы и вывод курсора в начало программы",
//            "Конец программы",
//            "Конец системы обозначения маркировок",
//            "Система исчислений от нуля детали",
//            1
//        )
//        val question36 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.number,
//            "Номер программы",
//            "Название программы",
//            "Коментарий программы",
//            "Обозначение резца",
//            1
//        )
//        val question37 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.comment,
//            "Коментарии",
//            "Знак обозначения резца",
//            "Обозначение блока пропуска",
//            "Значение внутри не считывается станком",
//            1
//        )
//        val question38 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g50,
//            "Ограничение максимальных оборотов шпинделя",
//            "Ограничение минимальных оборотов шпинделя",
//            "Ограничение максимальной подачи",
//            "Включение минимальной подачи станка",
//            1
//        )
//        val question39 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.correction,
//            "T01 - номер ячейки в барабане, 01 - номер корректора в таблице",
//            "T01 - номер ячейки в патроне, 01 - номер корректора в таблице",
//            "T01 - номер барабана, 01 - номер высоты инструмента",
//            "T01 - номер высоты инструмента в таблице, 01 - номер ячейки в барабане",
//            1
//        )
        Collections.addAll(
            questionsList, question1,
            question2, question3, question4, question5,
//            question6, question7, question8,question9,question10,
//            question11,question12,question13,question14,question15,
//            question16,question17, question18,question19,question20,
//            question21,question22,question23,question24,question25,
//            question26,question27,question28,question29,question30

        )

        return questionsList
    }

}