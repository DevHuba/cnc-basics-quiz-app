package com.example.cncbasicsquizapp

import java.util.*
import kotlin.collections.ArrayList

object Constants {

    const val USER_NAME: String = "user_name"
    const val TOTAL_QUESTIONS: String = "total_questions"
    const val CORRECT_ANSWERS: String = "correct_answers"

    fun qetQuestions(): ArrayList<Question> {
        val questionsList = ArrayList<Question>()
        val question1 = Question(
            id = 1, "ОПИСАНИЕ кода...", R.drawable.g00,
            "Код отвечающий за ход", "Кот отвечающий за код",
            "Код отвечающий за кот",
            "Код отвечающий за быстрое перемещение на большой плоскости", 1
        )
        val question2 = Question(
            id = 2, "ОПИСАНИЕ кода...", R.drawable.g01,
            "Код отвечающий за ход", "Кот отвечающий за ход",
            "Код отвечающий за сож", "Код отвечающий за отвод",
            1
        )
        val question3 = Question(
            id = 3, "ОПИСАНИЕ кода...", R.drawable.g02,
            "Код отвечающий за ход по радиусу или дуге ( по часовой )",
            "Код отвечающий за ход по радиусу или дуге ( против часовой )",
            "Код отвечающий за быстрое линейное перемещение",
            "Код отвечающий за перемещение патрона в станке",
            1
        )
        val question4 = Question(
            id = 3, "ОПИСАНИЕ кода...", R.drawable.g03,
            "Код отвечающий за ход по радиусу или дуге ( против часовой )",
            "Код отвечающий за ход по радиусу или дуге ( по часовой )",
            "Код отвечающий за быстрое линейное перемещение",
            "Код отвечающий за перемещение патрона в станке",
            1
        )
        val question5 = Question(
            id = 3, "ОПИСАНИЕ кода...", R.drawable.g04,
            "Пауза", "Остановка", "Стоянка", "Парковка",
            1
        )
        val question6 = Question(
            id = 3, "ОПИСАНИЕ кода...", R.drawable.g20,
            "Дюймовая система изчислений",
            "Метрическая система изчислений",
            "Система от одного нуля",
            "Система пенсионных изчислений",
            1
        )
        val question7 = Question(
            id = 3, "ОПИСАНИЕ кода...", R.drawable.g21,
            "Метрическая система изчислений",
            "Дюймовая система изчислений",
            "Система от одного нуля",
            "Система пенсионных начислений",
            1
        )
//        val question8 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g28,
//            "Программируемые нули",
//            "Ноль детали/заготовки",
//            "Код машинного нуля",
//            "Метрическая система изчислений",
//            1
//        )
//        val question9 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g54,
//            "Ноль детали/заготовки",
//            "Ноль программы",
//            "Машинный ноль",
//            "Ноль в ноль",
//            1
//        )
//        val question10 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g71,
//            "Черновой цикл",
//            "Чистово цикл",
//            "Цикл нарезания резьбы резцом",
//            "Канавочный цикл",
//            1
//        )
//        val question11 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g70,
//            "Чистово цикл",
//            "Черновой цикл",
//            "Цикл нарезания резьбы резцом",
//            "Канавочный цикл",
//            1
//        )
//        val question12 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g75,
//            "Канавочный цикл",
//            "Чистово цикл",
//            "Черновой цикл",
//            "Цикл нарезания резьбы резцом",
//            1
//        )
//        val question13 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g76,
//            "Цикл нарезания резьбы резцом",
//            "Канавочный цикл",
//            "Чистово цикл",
//            "Черновой цикл",
//            1
//        )
//        val question14 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g80,
//            "Отмена циклов сверления и отмена их параметров",
//            "Отмена сверления",
//            "Цикл сверления с задержкой на дне отверстия",
//            "Отмена параметров чернового цикла",
//            1
//        )
//        val question15 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g81,
//            "Цикл сверления насквозь (глубина < 3D)",
//            "Цикл сверления с прерыванием",
//            "Цикл сверления с задержкой на дне отверстия",
//            "Цикл сверления с зарыванием",
//            1
//        )
//        val question16 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g82,
//            "Цикл сверления с задержкой на дне отверстия",
//            "Цикл сверления насквозь (глубина < 3D)",
//            "Цикл сверления с прерыванием",
//            "Цикл сверления с зарыванием",
//            1
//        )
//        val question17 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g83,
//            "Цикл сверления с полным выводом сверла",
//            "Цикл сверления с задержкой на дне отверстия",
//            "Цикл сверления насквозь (глубина < 3D)",
//            "Цикл сверления с обрывание",
//            1
//        )
//        val question18 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g73,
//            "Цикл высокоскоростного сверления",
//            "Цикл сверления с задержкой на дне отверстия",
//            "Цикл сверления насквозь (глубина < 3D)",
//            "Цикл сверления с задержкой перед сверлением",
//            1
//        )
//        val question19 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g90,
//            "Глобальная система одного нуля на заготовке",
//            "Глобальная система, где остановился инструмент там и ноль детали/заготовки",
//            "Система от одного нуля",
//            "Система пенсионных начислений",
//            1
//        )
//        val question20 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g91,
//            "Глобальная система, где остановился инструмент там и ноль детали/заготовки",
//            "Глобальная система одного нуля на заготовке",
//            "Система офсэтов инструмента",
//            "Система поворота барабата вокруг своей оси",
//            1
//        )
//        val question21 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g94,
//            "Формат подачи ( мм/мин )",
//            "Формат подачи ( мм/обр )",
//            "Формат скорости резания",
//            "Формат системы изчислений",
//            1
//        )
//        val question22 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g95,
//            "Формат подачи ( мм/обр )",
//            "Формат подачи ( мм/мин )",
//            "Формат скорости резания",
//            "Формат системы изчислений",
//            1
//        )
//        val question23 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g96,
//            "Постоянная скорость резания",
//            "Постоянные обороты шпинделя",
//            "Постоянная скорость перемещения",
//            "Глобальная система постоянности",
//            1
//        )
//        val question24 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g97,
//            "Константные обороты шпинделя",
//            "Постоянная скорость резания",
//            "Постояннная система вращения",
//            "Константные перемещения патрона",
//            1
//        )
//        val question25 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g98,
//            "Плоскость переезда между отверстиями от изначальной позиции резца",
//            "Плоскость переезда между отверстиями от нуля детали/заготовки",
//            "Плоскость переезда между отверстием",
//            "Плоскость подъезда к заготовке",
//            1
//        )
//        val question26 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.g99,
//            "Плоскость переезда между отверстиями от нуля детали/заготовки",
//            "Плоскость переезда между отверстиями от изначальной позиции резца",
//            "Плоскость переезда между отверстием",
//            "Плоскость подъезда к заготовке",
//            1
//        )
//        val question27 = Question(
//            id = 3, "ОПИСАНИЕ кода...", R.drawable.m0,
//            "Метрическая система изчислений",
//            "Дюймовая система изчислений",
//            "Система от одного нуля",
//            "Система пенсионных начислений",
//            1
//        )
        val question28 = Question(
            id = 3, "ОПИСАНИЕ кода...", R.drawable.g20,
            "Метрическая система изчислений",
            "Дюймовая система изчислений",
            "Система от одного нуля",
            "Система пенсионных начислений",
            1
        )
        val question29 = Question(
            id = 3, "ОПИСАНИЕ кода...", R.drawable.g20,
            "Метрическая система изчислений",
            "Дюймовая система изчислений",
            "Система от одного нуля",
            "Система пенсионных начислений",
            1
        )
        val question30 = Question(
            id = 3, "ОПИСАНИЕ кода...", R.drawable.g20,
            "Метрическая система изчислений",
            "Дюймовая система изчислений",
            "Система от одного нуля",
            "Система пенсионных начислений",
            1
        )
        Collections.addAll(
            questionsList, question1,
            question2, question3,
            question4, question5, question6, question7,
//            question8,question9,question10,
//            question11,question12,question13,question14,question15,
//            question16,question17, question18,question19,question20,
//            question21,question22,question23,question24,question25,
//            question26,question27,question28,question29,question30

        )

        return questionsList
    }

}